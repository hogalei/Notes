====================JS 基础类型与引用类型的赋值问题====================

坑坑坑：
var a = {'name': '123'};
var b = a;
b.name = '456';
console.log(b.name); //结果为456
console.log(a.name); //惊奇地发现，a.name的值也发生了改变，结果为456

原因分析：
JavaScript数据类型大体分为两类：基础类型和引用类型

1.基础类型数据存放在栈中，引用类型存放在堆中。

（1）存放在栈中的数据（即基础类型数据），访问时计算机提供的是绝对位置，可以通过普通的方式进行赋值，且不会相互影响。
示例：
var a = 1;
var b = a;
b = 2;
console.log(a,b); //结果为1,2 结果没有相互影响

（2）存放在堆中的数据（即引用类型数据），访问时计算机提供的是存放地址（指针），只是通过普通的方式进行赋值，值会相互影响，因为值指向同一个指针位置。
因此需要使用特殊的方法进行赋值，具体方法如下：
使用Object.assign();
示例：
var obj1 = { a: 1 };
var obj2 = Object.assign({}, obj1); //相当于复制了一个新对象，然后把旧对象数据存放在里面，新对象与旧对象之间数据互不影响。

